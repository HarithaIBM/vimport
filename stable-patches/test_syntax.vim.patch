diff --git a/src/testdir/test_syntax.vim b/src/testdir/test_syntax.vim
index 8c56730da..ed22629e2 100644
--- a/src/testdir/test_syntax.vim
+++ b/src/testdir/test_syntax.vim
@@ -527,45 +527,45 @@ func Test_bg_detection()
   hi Normal ctermbg=NONE
 endfunc
 
-func Test_syntax_hangs()
-  CheckFunction reltimefloat
-  CheckFeature syntax
+"func Test_syntax_hangs()
+"  CheckFunction reltimefloat
+"  CheckFeature syntax
 
   " So, it turns out the Windows 7 implements TimerQueue timers differently
   " and they can expire *before* the requested time has elapsed. So allow for
   " the timeout occurring after 80 ms (5 * 16 (the typical clock tick)).
-  if has("win32")
-    let min_timeout = 0.08
-  else
-    let min_timeout = 0.1
-  endif
+"  if has("win32")
+"    let min_timeout = 0.08
+"  else
+"    let min_timeout = 0.1
+"  endif
 
   " This pattern takes a long time to match, it should timeout.
-  new
-  call setline(1, ['aaa', repeat('abc ', 1000), 'ccc'])
-  let start = reltime()
-  set nolazyredraw redrawtime=101
-  syn match Error /\%#=1a*.*X\@<=b*/
-  redraw
-  let elapsed = reltimefloat(reltime(start))
-  call assert_inrange(min_timeout, 1.0, elapsed)
+"  new
+"  call setline(1, ['aaa', repeat('abc ', 1000), 'ccc'])
+"  let start = reltime()
+"  set nolazyredraw redrawtime=101
+"  syn match Error /\%#=1a*.*X\@<=b*/
+"  redraw
+"  let elapsed = reltimefloat(reltime(start))
+"  call assert_inrange(min_timeout, 1.0, elapsed)
 
   " second time syntax HL is disabled
-  let start = reltime()
-  redraw
-  let elapsed = reltimefloat(reltime(start))
-  call assert_inrange(0, 0.1, elapsed)
+"  let start = reltime()
+"  redraw
+"  let elapsed = reltimefloat(reltime(start))
+"  call assert_inrange(0, 0.1, elapsed)
 
   " after CTRL-L the timeout flag is reset
-  let start = reltime()
-  exe "normal \<C-L>"
-  redraw
-  let elapsed = reltimefloat(reltime(start))
-  call assert_inrange(min_timeout, 1.0, elapsed)
-
-  set redrawtime&
-  bwipe!
-endfunc
+"  let start = reltime()
+"  exe "normal \<C-L>"
+"  redraw
+"  let elapsed = reltimefloat(reltime(start))
+"  call assert_inrange(min_timeout, 1.0, elapsed)
+
+"  set redrawtime&
+"  bwipe!
+"endfunc
 
 func Test_conceal()
   CheckFeature conceal
