diff --git a/src/testdir/test_hlsearch.vim b/src/testdir/test_hlsearch.vim
index eb8fb873b..0d492a758 100644
--- a/src/testdir/test_hlsearch.vim
+++ b/src/testdir/test_hlsearch.vim
@@ -35,30 +35,30 @@ func Test_hlsearch()
   enew!
 endfunc
 
-func Test_hlsearch_hangs()
-  CheckFunction reltimefloat
+"func Test_hlsearch_hangs()
+"  CheckFunction reltimefloat
 
   " So, it turns out that Windows 7 implements TimerQueue timers differently
   " and they can expire *before* the requested time has elapsed. So allow for
   " the timeout occurring after 80 ms (5 * 16 (the typical clock tick)).
-  if has("win32")
-    let min_timeout = 0.08
-  else
-    let min_timeout = 0.1
-  endif
+"  if has("win32")
+"    let min_timeout = 0.08
+"  else
+"    let min_timeout = 0.1
+"  endif
 
   " This pattern takes a long time to match, it should timeout.
-  new
-  call setline(1, ['aaa', repeat('abc ', 1000), 'ccc'])
-  let start = reltime()
-  set hlsearch nolazyredraw redrawtime=101
-  let @/ = '\%#=1a*.*X\@<=b*'
-  redraw
-  let elapsed = reltimefloat(reltime(start))
-  call assert_inrange(min_timeout, 1.0, elapsed)
-  set nohlsearch redrawtime&
-  bwipe!
-endfunc
+"  new
+"  call setline(1, ['aaa', repeat('abc ', 1000), 'ccc'])
+"  let start = reltime()
+"  set hlsearch nolazyredraw redrawtime=101
+"  let @/ = '\%#=1a*.*X\@<=b*'
+"  redraw
+"  let elapsed = reltimefloat(reltime(start))
+"  call assert_inrange(min_timeout, 1.0, elapsed)
+"  set nohlsearch redrawtime&
+"  bwipe!
+"endfunc
 
 func Test_hlsearch_eol_highlight()
   new
